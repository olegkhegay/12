{"version":3,"file":"FeedbackForm.vue.mjs","sources":["../../../../components/FeedbackForm.vue"],"sourcesContent":["<template>\r\n  <section class=\"feedback-section\" ref=\"feedbackSection\">\r\n    <div class=\"feedback-bg\">\r\n      <img :src=\"backgroundImage\" alt=\"Фоновый узор\">\r\n    </div>\r\n    <div class=\"feedback-container\">\r\n      <div class=\"feedback-left\">\r\n        <div class=\"feedback-text\" ref=\"feedbackText\">\r\n          <h2>Оставить обратную связь</h2>\r\n          <p>Остались вопросы или есть предложения? Напишите нам – мы всегда на связи!</p>\r\n        </div>\r\n        <div class=\"feedback-form\" ref=\"feedbackForm\">\r\n          <div class=\"form-group\" :class=\"{ 'error': errors.name, 'pulse-animation': animationFields.name }\">\r\n            <label for=\"name\">Имя</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"name\" \r\n              placeholder=\"Ваше имя...\" \r\n              v-model=\"formData.name\"\r\n              @focus=\"clearError('name')\"\r\n            >\r\n            <span class=\"error-message\" v-if=\"errors.name\">{{ errors.name }}</span>\r\n          </div>\r\n          <div class=\"form-group\" :class=\"{ 'error': errors.email, 'pulse-animation': animationFields.email }\">\r\n            <label for=\"email\">Email</label>\r\n            <input \r\n              type=\"email\" \r\n              id=\"email\" \r\n              placeholder=\"user.name@email.com\" \r\n              v-model=\"formData.email\"\r\n              @focus=\"clearError('email')\"\r\n            >\r\n            <span class=\"error-message\" v-if=\"errors.email\">{{ errors.email }}</span>\r\n          </div>\r\n          <div class=\"form-group\" :class=\"{ 'error': errors.phone, 'pulse-animation': animationFields.phone }\">\r\n            <label for=\"phone\">Телефон</label>\r\n            <input \r\n              type=\"tel\" \r\n              id=\"phone\" \r\n              placeholder=\"+998 90 111 22 33\" \r\n              v-model=\"formData.phone\"\r\n              @focus=\"clearError('phone')\"\r\n            >\r\n            <span class=\"error-message\" v-if=\"errors.phone\">{{ errors.phone }}</span>\r\n          </div>\r\n          <div class=\"form-group\" :class=\"{ 'error': errors.message, 'pulse-animation': animationFields.message }\">\r\n            <label for=\"message\">Сообщение</label>\r\n            <textarea \r\n              id=\"message\" \r\n              placeholder=\"Пожалуйста, введите ваше сообщение здесь... (необязательно)\" \r\n              v-model=\"formData.message\"\r\n              @focus=\"clearError('message')\"\r\n            ></textarea>\r\n            <span class=\"error-message\" v-if=\"errors.message\">{{ errors.message }}</span>\r\n          </div>\r\n          <button \r\n            class=\"feedback-submit\" \r\n            @click.prevent=\"submitForm\"\r\n            :disabled=\"isSubmitting\"\r\n          >\r\n            <span v-if=\"!isSubmitting\">Отправить сообщение</span>\r\n            <span v-else class=\"spinner\"></span>\r\n          </button>\r\n          <div class=\"form-status\" v-if=\"formStatus.message\">\r\n            <div class=\"success-message\" v-if=\"formStatus.success\">\r\n              {{ formStatus.message }}\r\n            </div>\r\n            <div class=\"error-message-global\" v-else>\r\n              {{ formStatus.message }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"feedback-right\">\r\n        <div class=\"consultation-card\" ref=\"consultationCard\">\r\n          <h3>Консультация по проекту</h3>\r\n          <p>Чтобы узнать больше о наших услугах, заполните заявку или позвоните нам. Мы расскажем вам, как мы можем помочь вашему бизнесу.</p>\r\n          <div class=\"consultation-info\">\r\n            <div class=\"consultation-item\">\r\n              <span class=\"consultation-label\">Телефон:</span>\r\n              <span class=\"consultation-value\">+998 (90) 123-45-67</span>\r\n            </div>\r\n            <div class=\"consultation-item\">\r\n              <span class=\"consultation-label\">Email:</span>\r\n              <span class=\"consultation-value\">info@gmail.ru</span>\r\n            </div>\r\n            <div class=\"consultation-item\">\r\n              <span class=\"consultation-label\">Адрес:</span>\r\n              <span class=\"consultation-value\">Узбекистан, г. Ташкент, ул. Богишамол, 232.</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, watch } from 'vue';\r\nimport gsap from 'gsap';\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\r\n\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nexport default {\r\n  name: 'FeedbackForm',\r\n  setup() {\r\n    // Refs для анимации\r\n    const feedbackSection = ref(null);\r\n    const feedbackText = ref(null);\r\n    const feedbackForm = ref(null);\r\n    const consultationCard = ref(null);\r\n    \r\n    // Определяем текущую тему для изображения\r\n    const currentTheme = computed(() => {\r\n      if (typeof window !== 'undefined') {\r\n        return document.documentElement.getAttribute('data-theme') || 'white';\r\n      }\r\n      return 'white';\r\n    });\r\n    \r\n    // Получаем путь к изображению в зависимости от темы\r\n    const backgroundImage = computed(() => {\r\n      return currentTheme.value === 'white' ? '/bg_Feedback-white.png' : '/bg_Feedback-dark.png';\r\n    });\r\n    \r\n    // Данные формы\r\n    const formData = reactive({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      message: ''\r\n    });\r\n    \r\n    // Ошибки валидации\r\n    const errors = reactive({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      message: ''\r\n    });\r\n    \r\n    // Состояние анимации для полей\r\n    const animationFields = reactive({\r\n      name: false,\r\n      email: false,\r\n      phone: false,\r\n      message: false\r\n    });\r\n    \r\n    // Состояние формы\r\n    const isSubmitting = ref(false);\r\n    const formStatus = reactive({\r\n      success: false,\r\n      message: ''\r\n    });\r\n    \r\n    // Функция для валидации формы\r\n    const validateForm = () => {\r\n      let isValid = true;\r\n      \r\n      // Валидация имени\r\n      if (!formData.name || formData.name.trim().length < 2) {\r\n        errors.name = 'Имя должно содержать не менее 2 символов';\r\n        startPulseAnimation('name');\r\n        isValid = false;\r\n      } else {\r\n        errors.name = '';\r\n      }\r\n      \r\n      // Валидация email\r\n      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n      if (!formData.email || !emailRegex.test(formData.email)) {\r\n        errors.email = 'Пожалуйста, введите корректный email';\r\n        startPulseAnimation('email');\r\n        isValid = false;\r\n      } else {\r\n        errors.email = '';\r\n      }\r\n      \r\n      // Валидация телефона\r\n      // Обновленное регулярное выражение для поддержки узбекских (+998) и российских номеров\r\n      const phoneRegex = /^(\\+998|998|8)?[\\s\\-]?(\\d{2}|\\(\\d{2}\\))[\\s\\-]?\\d{3}[\\s\\-]?\\d{2}[\\s\\-]?\\d{2}$|^(\\+7|7|8)?[\\s\\-]?\\(?[489][0-9]{2}\\)?[\\s\\-]?[0-9]{3}[\\s\\-]?[0-9]{2}[\\s\\-]?[0-9]{2}$/;\r\n      if (!formData.phone || !phoneRegex.test(formData.phone)) {\r\n        errors.phone = 'Пожалуйста, введите корректный номер телефона';\r\n        startPulseAnimation('phone');\r\n        isValid = false;\r\n      } else {\r\n        errors.phone = '';\r\n      }\r\n      \r\n      // Валидация сообщения\r\n      if (!formData.message || formData.message.trim().length < 10) {\r\n        errors.message = 'Сообщение должно содержать не менее 10 символов';\r\n        startPulseAnimation('message');\r\n        isValid = false;\r\n      } else {\r\n        errors.message = '';\r\n      }\r\n      \r\n      return isValid;\r\n    };\r\n    \r\n    // Функция для запуска пульсирующей анимации\r\n    const startPulseAnimation = (fieldName) => {\r\n      animationFields[fieldName] = true;\r\n      \r\n      // Останавливаем анимацию через 2 секунды\r\n      setTimeout(() => {\r\n        animationFields[fieldName] = false;\r\n      }, 2000);\r\n    };\r\n    \r\n    // Функция для очистки ошибки при фокусе на поле\r\n    const clearError = (fieldName) => {\r\n      errors[fieldName] = '';\r\n      animationFields[fieldName] = false;\r\n    };\r\n    \r\n    // Функция отправки формы\r\n    const submitForm = async () => {\r\n      // Проверяем валидацию\r\n      if (!validateForm()) {\r\n        return;\r\n      }\r\n      \r\n      // Устанавливаем состояние отправки\r\n      isSubmitting.value = true;\r\n      formStatus.success = false;\r\n      formStatus.message = '';\r\n      \r\n      try {\r\n        // Отправляем данные на сервер\r\n        const response = await fetch('/api/feedback', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(formData)\r\n        });\r\n        \r\n        const result = await response.json();\r\n        \r\n        // Если есть ошибки валидации с сервера\r\n        if (!result.success && result.errors) {\r\n          // Устанавливаем ошибки\r\n          Object.keys(result.errors).forEach(key => {\r\n            errors[key] = result.errors[key];\r\n            startPulseAnimation(key);\r\n          });\r\n        } else if (result.success) {\r\n          // Сбрасываем форму при успешной отправке\r\n          formData.name = '';\r\n          formData.email = '';\r\n          formData.phone = '';\r\n          formData.message = '';\r\n          \r\n          // Устанавливаем статус успеха\r\n          formStatus.success = true;\r\n          formStatus.message = result.message;\r\n          \r\n          // Анимация успешной отправки\r\n          if (feedbackForm.value) {\r\n            gsap.fromTo('.success-message', \r\n              { opacity: 0, y: 20 }, \r\n              { opacity: 1, y: 0, duration: 0.5, ease: 'power2.out' }\r\n            );\r\n          }\r\n          \r\n          // Сбрасываем статус через 5 секунд\r\n          setTimeout(() => {\r\n            formStatus.message = '';\r\n            formStatus.success = false;\r\n          }, 5000);\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка при отправке формы:', error);\r\n        formStatus.success = false;\r\n        formStatus.message = 'Произошла ошибка при отправке формы. Пожалуйста, попробуйте позже.';\r\n      } finally {\r\n        // Завершаем отправку\r\n        isSubmitting.value = false;\r\n      }\r\n    };\r\n    \r\n    // Функция анимации секции обратной связи\r\n    const animateFeedbackSection = () => {\r\n      if (!feedbackText.value || !feedbackForm.value || !consultationCard.value) return;\r\n      \r\n      const timeline = gsap.timeline({\r\n        scrollTrigger: {\r\n          trigger: feedbackSection.value,\r\n          start: 'top 80%',\r\n          end: 'bottom 20%',\r\n          toggleActions: 'play none none none'\r\n        }\r\n      });\r\n      \r\n      timeline\r\n        .from(feedbackText.value, {\r\n          y: 50,\r\n          opacity: 0,\r\n          duration: 0.8,\r\n          ease: 'power2.out'\r\n        })\r\n        .from(feedbackForm.value.querySelectorAll('.form-group'), {\r\n          y: 30,\r\n          opacity: 0,\r\n          stagger: 0.2,\r\n          duration: 0.5,\r\n          ease: 'power2.out'\r\n        }, '-=0.4')\r\n        .from(feedbackForm.value.querySelector('button'), {\r\n          y: 0, // Меняем с 20 на 0, чтобы избежать смещения кнопки вниз\r\n          opacity: 0,\r\n          duration: 0.5,\r\n          ease: 'power2.out',\r\n          clearProps: 'transform' // Добавляем очистку трансформации после анимации\r\n        }, '-=0.2')\r\n        .from(consultationCard.value, {\r\n          x: 50,\r\n          opacity: 0,\r\n          duration: 0.8,\r\n          ease: 'power2.out'\r\n        }, '-=0.6');\r\n    };\r\n    \r\n    // Отслеживаем изменение темы\r\n    watch(currentTheme, () => {\r\n      // При изменении темы переинициализируем анимации\r\n      if (typeof window !== 'undefined') {\r\n        // Очищаем все анимации ScrollTrigger\r\n        ScrollTrigger.getAll().forEach(trigger => trigger.kill());\r\n        \r\n        // Переинициализируем анимации\r\n        setTimeout(() => {\r\n          animateFeedbackSection();\r\n        }, 300);\r\n      }\r\n    });\r\n    \r\n    // Инициализация анимаций при монтировании компонента\r\n    onMounted(() => {\r\n      // Небольшая задержка для уверенности, что DOM полностью загружен\r\n      setTimeout(() => {\r\n        animateFeedbackSection();\r\n      }, 500);\r\n      \r\n      // Добавляем обработчик изменения размера окна\r\n      window.addEventListener('resize', handleResize);\r\n    });\r\n    \r\n    // Функция для обработки изменения размера окна\r\n    const handleResize = () => {\r\n      // Очищаем все анимации ScrollTrigger\r\n      ScrollTrigger.getAll().forEach(trigger => trigger.kill());\r\n      \r\n      // Переинициализируем анимации\r\n      setTimeout(() => {\r\n        animateFeedbackSection();\r\n      }, 300);\r\n    };\r\n    \r\n    // Очистка при размонтировании компонента\r\n    onBeforeUnmount(() => {\r\n      // Удаляем обработчик изменения размера окна\r\n      window.removeEventListener('resize', handleResize);\r\n      \r\n      // Очищаем все анимации ScrollTrigger\r\n      ScrollTrigger.getAll().forEach(trigger => trigger.kill());\r\n    });\r\n    \r\n    return {\r\n      feedbackSection,\r\n      feedbackText,\r\n      feedbackForm,\r\n      consultationCard,\r\n      formData,\r\n      errors,\r\n      animationFields,\r\n      isSubmitting,\r\n      formStatus,\r\n      submitForm,\r\n      clearError,\r\n      backgroundImage\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Feedback section */\r\n.feedback-section {\r\n  position: relative;\r\n  background-color: var(--background-color);\r\n  margin-top: 50px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  line-height: 1;\r\n  padding: 150px 0;\r\n}\r\n\r\n.feedback-bg {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.feedback-bg img {\r\n  width: 100%;\r\n  height: auto;\r\n  opacity: 0.4;\r\n}\r\n\r\n.feedback-section::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: var(--background-color);\r\n  z-index: 0;\r\n}\r\n\r\n.feedback-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  gap: 40px;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.feedback-left {\r\n  flex: 1;\r\n  min-width: 300px;\r\n  max-width: 600px;\r\n\r\n  button{\r\n    span{\r\n      color: var(--text-hover-color);\r\n    }\r\n  }\r\n}\r\n\r\n.feedback-text h2 {\r\n  font-weight: 400;\r\n  font-size: 50px;\r\n  margin-bottom: 20px;\r\n  color: var(--text-hover-color);\r\n}\r\n\r\n.feedback-text p {\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  margin-bottom: 30px;\r\n  color: var(--text-color);\r\n}\r\n\r\n.feedback-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  position: relative;\r\n}\r\n\r\n.form-group label {\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  color: var(--text-hover-color);\r\n}\r\n\r\n.form-group input,\r\n.form-group textarea {\r\n  padding: 15px;\r\n  border: 3px solid var(--text-hover-color);\r\n  background-color: transparent;\r\n  color: var(--text-color);\r\n  font-size: 18px;\r\n  border-radius: 0;\r\n}\r\n\r\n.form-group input::placeholder,\r\n.form-group textarea::placeholder {\r\n  color: var(--text-color);\r\n  opacity: 0.5;\r\n}\r\n\r\n.form-group textarea {\r\n  min-height: 120px;\r\n  resize: vertical;\r\n}\r\n\r\n.feedback-submit {\r\n  align-self: flex-start;\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n  padding: 16px 32px;\r\n  background-color: var(--btn1-color);\r\n  color: #fff;\r\n  border: 3px solid var(--text-hover-color);\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 55px;\r\n  min-width: 220px;\r\n  z-index: 5;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\r\n  border-radius: 6px;\r\n  opacity: 1 !important;\r\n  box-sizing: content-box;\r\n  overflow: visible;\r\n}\r\n\r\n.form-group:last-of-type {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-status {\r\n  margin-top: 20px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.success-message {\r\n  background-color: rgba(46, 204, 113, 0.1);\r\n  border-left: 3px solid #2ecc71;\r\n  padding: 10px 15px;\r\n  color: #2ecc71;\r\n  border-radius: 4px;\r\n}\r\n\r\n.error-message-global {\r\n  background-color: rgba(231, 76, 60, 0.1);\r\n  border-left: 3px solid #e74c3c;\r\n  padding: 10px 15px;\r\n  color: #e74c3c;\r\n  border-radius: 4px;\r\n  margin-top: 15px;\r\n}\r\n\r\n/* Стили для анимации ошибок */\r\n.form-group.error input,\r\n.form-group.error textarea {\r\n  border-color: #e74c3c;\r\n}\r\n\r\n.error-message {\r\n  color: #e74c3c;\r\n  font-size: 14px;\r\n  margin-top: 5px;\r\n}\r\n\r\n/* Пульсирующая анимация для ошибок */\r\n@keyframes pulse-error {\r\n  0% {\r\n    box-shadow: 0 0 0 0 rgba(231, 76, 60, 0.4);\r\n  }\r\n  70% {\r\n    box-shadow: 0 0 0 10px rgba(231, 76, 60, 0);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 0 0 rgba(231, 76, 60, 0);\r\n  }\r\n}\r\n\r\n.pulse-animation input,\r\n.pulse-animation textarea {\r\n  animation: pulse-error 1.5s infinite;\r\n}\r\n\r\n/* Спиннер для кнопки отправки */\r\n@keyframes spinner {\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n.spinner {\r\n  width: 24px;\r\n  height: 24px;\r\n  border: 3px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 50%;\r\n  border-top-color: #ffffff;\r\n  animation: spinner 0.8s linear infinite;\r\n}\r\n\r\n.feedback-submit:hover {\r\n  background-color: var(--btn1-color-hover);\r\n  transform: translateY(-2px);\r\n  border-color: var(--btn1-color-hover);\r\n}\r\n\r\n.feedback-submit:disabled {\r\n  opacity: 0.7 !important;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.feedback-right {\r\n  flex: 1;\r\n  min-width: 300px;\r\n  max-width: 400px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.consultation-card {\r\n  width: 100%;\r\n  padding: 30px;\r\n  border: 5px dashed var(--btn1-color-text);\r\n  background-color: var(--text-hover-color);\r\n  position: relative;\r\n  color: var(--text-color);\r\n  max-width: 371px;\r\n}\r\n\r\n.consultation-card h3 {\r\n  font-weight: 700;\r\n  font-size: 36px;\r\n  margin-bottom: 15px;\r\n  color: var(--btn1-color-text);\r\n}\r\n\r\n.consultation-card p {\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  margin-bottom: 30px;\r\n  color: var(--feedback-text-color);\r\n}\r\n\r\n.consultation-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.consultation-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n}\r\n\r\n.consultation-label {\r\n  font-weight: 700;\r\n  font-size: 16px;\r\n  color: var(--btn1-color-text);\r\n}\r\n\r\n.consultation-value {\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  color: var(--feedback-text-color);\r\n}\r\n\r\n/* Адаптивность */\r\n@media (max-width: 1200px) {\r\n  .feedback-container {\r\n    max-width: 960px;\r\n  }\r\n  \r\n  .feedback-text h2 {\r\n    font-size: 42px;\r\n  }\r\n}\r\n\r\n@media (max-width: 992px) {\r\n  .feedback-container {\r\n    max-width: 720px;\r\n  }\r\n  \r\n  .feedback-text h2 {\r\n    font-size: 36px;\r\n  }\r\n  \r\n  .consultation-card h3 {\r\n    font-size: 30px;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .feedback-section {\r\n    padding: 80px 0;\r\n  }\r\n  \r\n  .feedback-container {\r\n    max-width: 540px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  \r\n  .feedback-left,\r\n  .feedback-right {\r\n    max-width: 100%;\r\n  }\r\n  \r\n  .feedback-text h2 {\r\n    font-size: 32px;\r\n  }\r\n  \r\n  .consultation-card {\r\n    max-width: 100%;\r\n  }\r\n}\r\n\r\n@media (max-width: 576px) {\r\n  .feedback-section {\r\n    padding: 60px 0;\r\n  }\r\n  \r\n  .feedback-text h2 {\r\n    font-size: 28px;\r\n  }\r\n  \r\n  .feedback-text p {\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .form-group label {\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .form-group input,\r\n  .form-group textarea {\r\n    font-size: 16px;\r\n    padding: 12px;\r\n  }\r\n  \r\n  .consultation-card h3 {\r\n    font-size: 24px;\r\n  }\r\n  \r\n  .consultation-card p {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .consultation-label,\r\n  .consultation-value {\r\n    font-size: 14px;\r\n  }\r\n}\r\n</style>\r\n"],"names":["_ssrRenderAttrs","_mergeProps","_ssrRenderAttr","_ssrRenderClass","_ssrInterpolate","_ssrIncludeBooleanAttr"],"mappings":"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"}